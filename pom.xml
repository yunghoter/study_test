<?xml version="1.0" encoding="UTF-8"?>
<!-- Конфігурація Maven проекту -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://www.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <!-- Батьківський проект Spring Boot -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.18</version>
  </parent>
  
  <!-- Інформація про проект -->
  <groupId>com.college</groupId>
  <artifactId>college-schedule</artifactId>
  <packaging>jar</packaging>
  <version>0.4.0-SNAPSHOT</version>
  <name>college-schedule-app</name>
  
  <!-- Властивості проекту -->
  <properties>
    <java.version>17</java.version>
    <project.scm.id>github</project.scm.id>
  </properties>

  <!-- SCM Information -->
  <scm>
    <connection>scm:git:https://github.com/chdbc-samples/college-schedule-app.git</connection>
    <developerConnection>scm:git:https://github.com/chdbc-samples/college-schedule-app.git</developerConnection>
    <url>https://github.com/chdbc-samples/college-schedule-app</url>
    <tag>HEAD</tag>
  </scm>

  <!-- Залежності проекту -->
  <dependencies>
    <!-- Стартери Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>nz.net.ultraq.thymeleaf</groupId>
      <artifactId>thymeleaf-layout-dialect</artifactId>
      <version>3.1.0</version>
    </dependency>
    
    <!-- База даних -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    
    <!-- Інструменти розробника -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    
    <!-- Залежності для тестування -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub Packages</name>
      <url>https://maven.pkg.github.com/chdbc-samples/college-schedule-app</url>
    </repository>
  </distributionManagement>

  <!-- Налаштування збірки -->
  <build>
    <plugins>
      <!-- Плагін Spring Boot -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      
      <!-- Налаштування всіх тестів -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <!-- Keep existing configuration -->
        <configuration>
          <argLine>${surefireArgLine}</argLine>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*IntegrationTest.java</include>
          </includes>
          <!-- XML/TXT reports are generated here by default -->
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
        </configuration>
      </plugin>

      <!-- Generate Surefire HTML report during the test phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.2.5</version> <!-- Use the same version as in reporting section -->
        <executions>
          <execution>
            <id>generate-surefire-report</id>
            <phase>test</phase>
            <goals>
              <goal>report-only</goal> <!-- Use report-only to generate from existing test results -->
            </goals>
            <configuration>
              <!-- Output the HTML report to the site directory -->
              <outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
              <reportsDirectories>
                <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
              </reportsDirectories>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Налаштування плагіна Site -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.12.1</version>
      </plugin>
      
      <!-- Додавання тестових ресурсів -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>add-integration-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/integration-test/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-integration-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/integration-test/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Плагін JaCoCo -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.11</version>
        <executions>
          <!-- Покриття тестами для всіх тестів -->
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          
          <!-- Єдиний звіт про тести (already bound to test phase and outputs to site/jacoco) -->
          <execution>
            <id>default-report</id>
            <phase>test</phase> <!-- This ensures report runs during 'mvn test' -->
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
              <!-- Output directory is already target/site/jacoco -->
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
              <title>${project.name} - Code Coverage Report</title>
              <footer>Code Coverage Report for ${project.name} ${project.version}</footer>
            </configuration>
          </execution>

          <!-- Перевірки покриття -->
          <execution>
            <id>default-check</id>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.75</minimum>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.5</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Maven Release Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.1</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <releaseProfiles>release</releaseProfiles>
          <goals>deploy</goals>
        </configuration>
      </plugin>
    </plugins>
    
    <!-- Налаштування директорій проекту -->
    <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>src/integration-test/java</directory>
        <includes>
          <include>**/*.java</include>
        </includes>
      </testResource>
    </testResources>
  </build>
  
  <!-- Налаштування звітів (This section is used by 'mvn site') -->
  <reporting>
      <plugins>
          <!-- Звіти про тести (Surefire report config for 'mvn site') -->
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-report-plugin</artifactId>
              <version>3.2.5</version>
              <!-- Optional: Add configuration here if needed specifically for 'mvn site' -->
          </plugin>
          <!-- Optional: Add JaCoCo report config here if you also want it during 'mvn site' -->
          <!--
          <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <reportSets>
                  <reportSet>
                      <reports>
                          <report>report</report>
                      </reports>
                  </reportSet>
              </reportSets>
          </plugin>
          -->
      </plugins>
  </reporting>
</project>
